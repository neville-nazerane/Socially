@page "/profile/{id:int}/friends"
@page "/profile/friends"
@layout ProfileLayout




<a @onclick:preventDefault @onclick=SwapAddNew class="btn btn-primary-soft rounded-circle icon-md ms-auto" href="#">
    <i class="fa-solid fa-plus"></i>
</a>

@if (addNew)
{
    <form @onsubmit=SearchAsync class="rounded position-relative">
        <input @bind-value=search class="form-control ps-5 bg-light" type="search" placeholder="Search..." aria-label="Search">
        <button class="btn bg-transparent px-2 py-0 position-absolute top-50 start-0 translate-middle-y" type="submit">
            <i class="bi bi-search fs-5"></i>
        </button>
    </form>

    foreach (var result in searchResults)
    {
        <div class="hstack gap-2 mb-3">
            <!-- Avatar -->
            <div class="avatar">
                <ProfilePicture FileName=@result.ProfilePicUrl />
            </div>
            <!-- Title -->
            <div class="overflow-hidden">
                <a class="h6 mb-0" @onclick:preventDefault href="#">@result.FirstName @result.LastName</a>
            </div>
            <!-- Button -->
            <div class="ms-md-auto d-flex">
                @if (result.FriendState == Socially.Models.Enums.UserFriendState.None)
                {
                    <button class="btn btn-primary-soft btn-sm mb-0 me-2" @onclick=@(() => RequestAsync(result.Id))> Friend Request </button>
                }
            </div>

        </div>
    }
}


@if (friends is not null)
{
    <h2>Friends</h2>
    foreach (var friend in friends)
    {
        <div class="d-md-flex align-items-center mb-4">
            <!-- Avatar -->
            <div class="avatar me-3 mb-3 mb-md-0">
                <ProfilePicture FileName=@friend.ProfilePicUrl />
            </div>
            <!-- Info -->
            <div class="w-100">
                <div class="d-sm-flex align-items-start">
                    <h6 class="mb-0"><a @onclick:preventDefault href="#">@friend.GetDisplayName()</a></h6>
                </div>
            </div>
            <!-- Button -->
            <div class="ms-md-auto d-flex">
                <button class="btn btn-danger-soft btn-sm mb-0 me-2" @onclick=@(() => RemoveAsync(friend.Id))> Remove </button>
                @*<button class="btn btn-primary-soft btn-sm mb-0"> Message </button>*@
            </div>
        </div>
    }
}

@if (requests is not null)
{
    <h2>Request</h2>
    <div class="card-body">
        @foreach (var friend in requests)
        {
            <div class="d-md-flex align-items-center mb-4">
                <!-- Avatar -->
                <div class="avatar me-3 mb-3 mb-md-0">
                    <ProfilePicture FileName=@friend.ProfilePicUrl />
                </div>
                <!-- Info -->
                <div class="w-100">
                    <div class="d-sm-flex align-items-start">
                        <h6 class="mb-0"><a @onclick:preventDefault href="#">@friend.GetDisplayName()</a></h6>
                    </div>
                </div>
                <!-- Button -->
                <div class="ms-md-auto d-flex">
                    <button class="btn btn-primary-soft btn-sm mb-0 me-2" @onclick=@(() => RespondAsync(friend.Id, true))> Accept </button>
                    <button class="btn btn-danger-soft btn-sm mb-0" @onclick=@(() => RespondAsync(friend.Id, false))> Reject </button>
                </div>
            </div>
        }
    </div>
}
