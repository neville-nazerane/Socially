
pool:
  vmImage: 'ubuntu-latest'

trigger:
  branches:
    include:
      - master
  paths:
    include:
      - src/Socially.Core
      - src/Socially.Server.DataAccess
      - src/Socially.Server.Services
      - src/Socially.WebAPI
      - pipelines/webAPI.yaml

variables:
  devopsOrg: https://dev.azure.com/nevillenazerane
  devopsProject: publishes

  projectPath: src/Socially.WebAPI
  destDirectory: /var/www/socially
  projectName: Socially.WebAPI
  devPort: 5030
  prodPort: 6000
  prodSlotPort: 5050

  serviceDescription: Socially API
  serviceidentifier: sociallyAPI
  servicename: kestrel-socially


resources:
  repositories:
    - repository: templates
      type: github
      name: neville-nazerane/Common-Pipelines
      endpoint: github.com_neville-nazerane

stages:

  - stage: Build
    displayName: Compile API
    jobs:
      - job: DotnetBuild
        displayName: Building and Publishing
        steps:

          - script: |
              dotnet publish $(projectPath) -c release -o published
              tar -czvf packed.tar.gz -C published .
            displayName: Compile and Compress

          - publish: packed.tar.gz
            artifact: packed


  - stage: DeployDev
    condition: false
    variables: 
      - group: Socially-Dev
    displayName: Deploy to Dev
    jobs:
      - deployment: DevDeploy
        displayName: Deploy to Development VM
        environment:
          name: Development
          resourceType: VirtualMachine
          resourceName: websites
        strategy:
          runOnce:
            deploy:
              steps:

                - script: |
                    sudo rm -rf $(destDirectory)/*
                    sudo tar -xzvf packed.tar.gz -C $(destDirectory)

                    rm -rf *
                  displayName: Copying website
                  workingDirectory: $(Pipeline.Workspace)/packed
                  failOnStderr: true

                - task: DeleteFiles@1
                  displayName: Clean up

                - template: recreate-service.yml
                  parameters:
                    port: $(devPort)
                    varGroup: Socially-Dev


  - stage: DeployProd
    variables:
      - group: Socially-Prod
    displayName: Deploy to Production
    jobs:
      - deployment: ProdDeploy
        displayName: Deploy to Production VM
        environment:
          name: SociallyAPI
          resourceType: VirtualMachine
          resourceName: socially-api
        strategy:
          runOnce:
            deploy:
              steps:

                # - powershell: |
                #     $file = '/var/www/slotName'
                #     if (Test-Path -Path $file -PathType Leaf) {
                #         $slotName = Get-Content .\slotName -Raw
                #     }
                #     else {
                #         $slotName = 'blue'
                #     }
                #     Write-Host "##vso[task.setvariable variable=slotName;]$slotName"
                #     if ($slotName -eq 'blue') {
                #         $slotName = 'green';
                #     } 
                #     else {
                #         $slotName = 'blue';
                #     }

                - bash: |
                    filename=/var/www/slotName
                    if test -f $filename; then
                      mapfile slotName < $filename;
                    else 
                    slotName='blue'; 
                    fi

                    echo "##vso[task.setvariable variable=slotName;]$slotName"

                - script: echo 'though guy'
                  displayName: $(slotName)

                - script: |
                    sudo rm -rf $(destDirectory)/*
                    sudo tar -xzvf packed.tar.gz -C $(destDirectory)

                    rm -rf *
                  displayName: Copying website
                  workingDirectory: $(Pipeline.Workspace)/packed
                  failOnStderr: true

                - task: DeleteFiles@1
                  displayName: Clean up

                - template: recreate-service.yml
                  parameters:
                    port: $(prodPort)
                    varGroup: Socially-Prod


# extends:
#   template: Shared\netcore-ubuntu.yml@templates
#   parameters:
#     useVersion: 7.x
#     projectPath: src/Socially.WebAPI
#     projectName: Socially.WebAPI
#     destDirectory: /var/www/socially
#     port: 5030

#     service:
#       description: Socially API
#       identifier: sociallyAPI
#       name: kestrel-socially

#     preBuildSteps:
#       - script: dotnet run "$(dbAdminConnectionString)"
#         workingDirectory: src/Socially.Utils.MigrationConsole

#     configs:
#       ASPNETCORE_ENVIRONMENT: Production
#       connectionStrings__db: $(Secrets.Db)
#       appinsights: $(Secrets.web_appInsights)
#       sendGridApiKey: $(Secrets.sendgrid)
#       blobConnString: $(Secrets.blobConnString)

#       authOptions__secret: $(Secrets.AuthSecret)
#       authOptions__audiences: website
#       authOptions__issuer: https://api.sociallyconnections.com

#       settings__clientBaseUrl: https://sociallyconnections.com
#       settings__emailFrom: accounts@sociallyconnections.com
#       settings__forgotPasswordTemplate: $(Secrets.forgotPasswordTemplate)
#       settings__imageBase: https://pics.sociallyconnections.com






