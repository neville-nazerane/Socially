
pool:
  vmImage: ubuntu-latest

trigger:
  branches:
    include:
      - master
  paths:
    include:
      - src/Socially.Core
      - src/Socially.Apps.Consumer
      - src/Socially.Website
      - src/Socially.Utils.SimpleAzCopy
      - pipelines/website.yaml

variables:
  projectPath: src/Socially.Website
  projectName: Socially.Website
  azCopyPath: src/Socially.Utils.SimpleAzCopy
  destDirectory: /var/www/website

stages:

  - stage: Build
    jobs:
      - job: Building
        steps:

          - script: |
              dotnet publish $(projectPath) -c release -o published
              mkdir publishes
              tar -czvf publishes/packed.tar.gz -C published .
            displayName: building blazor

          - publish: publishes
            artifact: packed

  - stage: DeployProd
    variables:
      - group: Socially-Prod
    displayName: Deploy to Production
    jobs:
      - deployment: ProdDeploy
        displayName: Deploy to Production VM
        environment:
          name: SociallyAPI
          resourceType: VirtualMachine
          resourceName: socially-api
        strategy:
          runOnce:
            deploy:
              steps:

                - script: |

                    sudo rm -rf $(destDirectory)
                    sudo mkdir $(destDirectory)
                    
                    sudo tar -xzvf packed.tar.gz -C $(destDirectory)

                    rm -rf *
                  displayName: Copying website
                  workingDirectory: $(Pipeline.Workspace)/packed
                  failOnStderr: true

                - task: DeleteFiles@1
                  displayName: Clean up
          

  # - stage: Deploy
  #   jobs:
  #     - job: Deploying

  #       steps:

  #       - download: current
  #         displayName: Download artifacts

  #       - script: 
  #           dotnet run "$(webBlobConnString)" '$web' $(Pipeline.Workspace)/packed/wwwroot
  #         displayName: Dotnet AZ Deploy
  #         workingDirectory: $(azCopyPath)

  #       - task: AzureCLI@2
  #         displayName: Purge CDN
  #         inputs:
  #           azureSubscription: socially
  #           scriptType: pscore
  #           scriptLocation: inlineScript
  #           inlineScript: az cdn endpoint purge -g Socially -n sociallycdn --profile-name sociallywebsiteCDN --content-paths '/*'
